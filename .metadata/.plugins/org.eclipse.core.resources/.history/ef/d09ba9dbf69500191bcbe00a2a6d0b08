package guis;

import java.awt.EventQueue;
import javax.swing.JTable;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.border.BevelBorder;
import javax.swing.table.DefaultTableModel;

import Arreglo.ArregloCama;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import clase.Cama;
import libreria.Alerta;
import libreria.lib;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextField;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import javax.swing.SwingConstants;
import javax.swing.ImageIcon;

public class DlgCama extends JDialog implements ActionListener, MouseListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JButton btnIngresar;
	private JButton btnModificar;
	private JButton btnEliminar;
	private JScrollPane scrollPane;

	private static DefaultTableModel modelo;

	private JTable tableCama;
	private JTextField txtBuscarCama;
	private JLabel lblCama;
	private JLabel lblCategora;
	private JComboBox<?> cbxCategoria;
	private JLabel lblEstado;
	private JComboBox<?> cbxEstado;
	private JButton btnGuardar;
	private JButton btnBuscar;
	private JLabel lblNroCama;
	private JTextField txtCama;
	private JButton btnVerTodoslistar;
	private JTextField textField;
	private JLabel label;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DlgCama dialog = new DlgCama();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
					dialog.setLocationRelativeTo(null);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DlgCama() {
		setFont(new Font("Georgia", Font.BOLD, 12));
		setIconImage(Toolkit.getDefaultToolkit().getImage(DlgCama.class.getResource("/img/cama.png")));
		setTitle(" Cama - Clinica Bautista");
		getContentPane().setBackground(Color.WHITE);
		setForeground(Color.LIGHT_GRAY);
		setBounds(300, 100, 527, 481);
		getContentPane().setLayout(null);

		btnIngresar = new JButton("+");
		btnIngresar.addActionListener(this);

		label = new JLabel("");
		label.setHorizontalAlignment(SwingConstants.CENTER);
		label.setToolTipText("");
		label.setIcon(new ImageIcon(DlgCama.class.getResource("/img/SV1.jpg")));
		label.setBounds(374, 9, 127, 93);
		getContentPane().add(label);
		btnIngresar.setBounds(314, 9, 50, 30);
		getContentPane().add(btnIngresar);

		btnModificar = new JButton("");
		btnModificar.setIcon(new ImageIcon(DlgCama.class.getResource("/img/mantenimiento.png")));
		btnModificar.addActionListener(this);
		btnModificar.setBounds(314, 37, 50, 30);
		getContentPane().add(btnModificar);

		btnEliminar = new JButton("-");
		btnEliminar.setIcon(
				new ImageIcon("G:\\AED\\sdfsd\\Soluci\u00F3n_Proyectos_IA\\Proyecto_\\src\\img\\eliminar.png"));
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(264, 9, 50, 30);
		getContentPane().add(btnEliminar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 169, 491, 244);
		getContentPane().add(scrollPane);

		tableCama = new JTable();
		tableCama.setBackground(Color.LIGHT_GRAY);
		scrollPane.setViewportView(tableCama);
		tableCama.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		tableCama.setFillsViewportHeight(true);
		tableCama.addMouseListener(this);

		modelo = new DefaultTableModel();
		modelo.addColumn("Número de Cama:");
		modelo.addColumn("Categoría:");
		modelo.addColumn("Precio por día:");
		modelo.addColumn("Estado:");
		tableCama.setModel(modelo);

		txtBuscarCama = new JTextField();
		txtBuscarCama.setBounds(80, 138, 166, 20);
		getContentPane().add(txtBuscarCama);
		txtBuscarCama.setColumns(10);

		lblCama = new JLabel("Busca Cama:");
		lblCama.setBounds(10, 140, 140, 16);
		getContentPane().add(lblCama);

		lblCategora = new JLabel("Categor\u00EDa:");
		lblCategora.setBounds(10, 51, 60, 16);
		getContentPane().add(lblCategora);

		cbxCategoria = new JComboBox();
		cbxCategoria.setEnabled(false);
		cbxCategoria.setModel(new DefaultComboBoxModel(new String[] { "B\u00E1sica", "Est\u00E1ndar", "Premium" }));
		cbxCategoria.setBounds(106, 49, 90, 20);
		getContentPane().add(cbxCategoria);

		lblEstado = new JLabel("Estado:");
		lblEstado.setBounds(10, 86, 48, 16);
		getContentPane().add(lblEstado);

		cbxEstado = new JComboBox();
		cbxEstado.setEnabled(false);
		cbxEstado.setModel(new DefaultComboBoxModel(new String[] { "Libre", "Ocupado" }));
		cbxEstado.setBounds(106, 82, 90, 20);
		getContentPane().add(cbxEstado);

		btnGuardar = new JButton("");
		btnGuardar.setIcon(new ImageIcon(DlgCama.class.getResource("/img/grabar.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(264, 37, 50, 30);
		getContentPane().add(btnGuardar);

		btnBuscar = new JButton("Buscar");
		btnBuscar.setIcon(
				new ImageIcon("F:\\AED\\sdfsd\\Soluci\u00F3n_Proyectos_IA\\Proyecto_\\src\\img\\consulta.png"));
		btnBuscar.addActionListener(this);
		btnBuscar.setBounds(256, 130, 90, 30);
		getContentPane().add(btnBuscar);

		lblNroCama = new JLabel("Nro Cama:");
		lblNroCama.setFont(new Font("Tahoma", Font.BOLD, 12));
		lblNroCama.setBounds(10, 11, 62, 28);
		getContentPane().add(lblNroCama);

		txtCama = new JTextField();
		txtCama.setHorizontalAlignment(SwingConstants.CENTER);
		txtCama.setBackground(new Color(100, 149, 237));
		txtCama.setEditable(false);
		txtCama.setBounds(80, 14, 116, 20);
		getContentPane().add(txtCama);
		txtCama.setColumns(10);

		btnVerTodoslistar = new JButton("Listar");
		btnVerTodoslistar.setIcon(
				new ImageIcon("F:\\AED\\sdfsd\\Soluci\u00F3n_Proyectos_IA\\Proyecto_\\src\\img\\registrar.png"));
		btnVerTodoslistar.addActionListener(this);
		btnVerTodoslistar.setBounds(350, 130, 90, 30);
		getContentPane().add(btnVerTodoslistar);

		textField = new JTextField();
		textField.setEditable(false);
		textField.setBackground(new Color(176, 224, 230));
		textField.setBounds(0, 0, 511, 129);
		getContentPane().add(textField);
		textField.setColumns(10);
		listar();
	}

	ArregloCama ac = new ArregloCama("cama.txt");

	public void actionPerformed(ActionEvent arg0) {
		if (arg0.getSource() == btnBuscar) {
			actionPerformedBtnBuscar(arg0);
		}
		if (arg0.getSource() == btnVerTodoslistar) {
			actionPerformedBtnVerTodoslistar(arg0);
		}
		if (arg0.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(arg0);
		}
		if (arg0.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(arg0);
		}
		if (arg0.getSource() == btnModificar) {
			actionPerformedBtnModificar(arg0);
		}
		if (arg0.getSource() == btnIngresar) {
			actionPerformedBtnIngresar(arg0);
		}
	}

	protected void actionPerformedBtnIngresar(ActionEvent arg0) {
		limpieza();
		txtCama.setText("" + ac.codigoCorrelativo());
		habilitarEntradas(true);

	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == tableCama) {
			mouseClickedTable(e);
		}
	}

	protected void mouseClickedTable(MouseEvent e) {
		habilitarEntradas(true);
		editarFila();
	}

	protected void actionPerformedBtnModificar(ActionEvent arg0) {
		if (txtCama.getText().trim().length() < 1) {
			mensaje("Debe seleccionar un registro para poder eliminarlo");
		} else {
			habilitarEntradas(true);
		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent arg0) {

		// consultar al profesor si remove(x) recibe indice o valor
		try {
			int numCama = leerNumCama();
			Cama a = ac.buscar(numCama);
			if (a == null)
				Alerta.mensaje(this, "Selecciona un registro");
			else {
				int ok = Alerta.confirmar(this, "Selecciona un registro");
				if (ok == 0) {
					ac.eliminar(a);
					listar();
					habilitarEntradas(false);
				}
			}
			limpieza();

		} catch (Exception e1) {
			mensaje("Selecciona un registro");

		}

	}

	protected void actionPerformedBtnGuardar(ActionEvent arg0) {
		try {
			Cama a = ac.buscar(leerNumCama());
			if (a != null) {
				a.setCategoria(leerCategoria());
				a.setEstado(leerEstado());
				listar();
				habilitarEntradas(false);
			} else {
				clase.Cama x = new clase.Cama(leerNumCama(), leerCategoria(), leerEstado());
				ac.adicionar(x);
				listar();
				limpieza();
				habilitarEntradas(false);
			}
		} catch (Exception e) {
			mensaje("mensaje del catch ");

		}

	}

	protected void actionPerformedBtnVerTodoslistar(ActionEvent arg0) {
		listar();
	}

	protected void actionPerformedBtnBuscar(ActionEvent arg0) {

		/*
		 * try { int codigo = leerNumCama(); cama a = aa.buscar(codigo); if (a == null)
		 * mensaje("el CODIGO no existe"); else { aa.eliminar(a); listar(); }
		 * txtCama.setText(""); txtCama.requestFocus(); } catch (Exception e1) {
		 * mensaje("ingrese CODIGO correcto"); txtCama.setText("");
		 * txtCama.requestFocus(); }
		 */
	}

	void habilitarEntradas(boolean is) {
		cbxCategoria.setEnabled(is);
		cbxEstado.setEnabled(is);
		// txtCama.requestFocus();
	}

	void limpieza() {
		cbxEstado.setSelectedIndex(0);
		cbxCategoria.setSelectedIndex(0);

	}

	void mensaje(String s) {
		JOptionPane.showMessageDialog(this, s);
	}

	void editarFila() {

		if (ac.tamaño() == 0)
			limpieza();
		else {
			Cama x = ac.obtener(tableCama.getSelectedRow());
			txtCama.setText("" + x.getNcama());
			cbxCategoria.setSelectedIndex(x.getCategoria());
			cbxEstado.setSelectedIndex(x.getEstado());
		}

	}

	void listar() {
		modelo.setRowCount(0);
		for (int i = 0; i < ac.tamaño(); i++) {
			Object fila[] = { ac.obtener(i).getNcama(), ac.obtener(i).detalleCategoria(), ac.obtener(i).precioCama(),
					ac.obtener(i).detalleEstado() };
			modelo.addRow(fila);
		}
		;

	}

	int leerNumCama() {
		return Integer.parseInt(txtCama.getText().trim());
	}

	int leerCategoria() {
		return cbxCategoria.getSelectedIndex();
	}

	int leerEstado() {
		return cbxEstado.getSelectedIndex();
	}

	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}
}
